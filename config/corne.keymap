
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define RAISE   1
#define NUM     2

//visualize keymap at https://nickcoutsos.github.io/keymap-editor/

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <0>;
    require-prior-idle-ms = <125>;
};

/ {
    behaviours {
        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R                  &kp T    &kp Y          &kp U        &kp I      &kp O    &kp P          &kp TILDE
&kp LEFT_COMMAND  &kp A  &kp S  &kp D         &rpi LCTRL F           &kp G    &kp H          &kp J        &kp K      &kp L    &kp SEMICOLON  &kp SQT
&mo 1             &kp Z  &kp X  &kp C         &kp V                  &kp B    &kp N          &kp M        &kp COMMA  &kp DOT  &kp FSLH       &kp LCTRL
                                &kp LEFT_ALT  &mt LEFT_SHIFT ESCAPE  &mo 2    &kp BACKSPACE  &lt 1 SPACE  &kp ENTER
            >;
        };

        raise_layer {
            bindings = <
&bootloader  &trans  &kp LA(LC(U))  &kp LC(LA(I))  &kp LA(LC(O))  &kp LA(LS(PERIOD))    &kp PIPE   &kp NON_US_BACKSLASH  &kp CARET       &kp BSLH      &kp PIPE      &bootloader
&sys_reset   &trans  &kp LS(LG(U))  &kp LS(LG(I))  &kp LS(LG(O))  &kp LS(LA(O))         &kp LEFT   &kp DOWN              &kp UP_ARROW    &kp RIGHT     &trans        &sys_reset
&trans       &kp LT  &kp GT         &kp COMMA      &kp SEMICOLON  &kp SEMI              &kp TILDE  &kp MINUS             &kp UNDERSCORE  &kp C_VOL_DN  &kp C_VOL_UP  &trans
                                    &kp ESC        &trans         &kp TAB               &mo RAISE  &trans                &trans
            >;
        };

        num_layer {
            bindings = <
&trans     &kp EXCLAMATION  &kp AT_SIGN       &kp HASH              &kp DOLLAR             &kp PERCENT          &kp ASTERISK  &kp N7        &kp N8          &kp N9        &kp NON_US_BACKSLASH  &trans
&kp CARET  &kp PIPE         &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET    &kp MINUS     &kp NUMBER_4  &kp N5          &kp NUMBER_6  &kp EQUAL             &trans
&trans     &kp LESS_THAN    &kp GREATER_THAN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AMPERSAND        &kp PLUS      &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3  &kp PERIOD            &trans
                                              &kp N0                &kp DOT                &none                &kp BSPC      &kp NUMBER_0  &kp UNDERSCORE
            >;
        };
    };
};
